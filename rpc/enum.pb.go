// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc/enum.proto

package rpc

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EntryType int32

const (
	EntryType_ENTRY_TYPE_UNKNOWN       EntryType = 0
	EntryType_ENTRY_TYPE_NO_OP         EntryType = 1
	EntryType_ENTRY_TYPE_DATA          EntryType = 2
	EntryType_ENTRY_TYPE_CONFIGURATION EntryType = 3
)

var EntryType_name = map[int32]string{
	0: "ENTRY_TYPE_UNKNOWN",
	1: "ENTRY_TYPE_NO_OP",
	2: "ENTRY_TYPE_DATA",
	3: "ENTRY_TYPE_CONFIGURATION",
}

var EntryType_value = map[string]int32{
	"ENTRY_TYPE_UNKNOWN":       0,
	"ENTRY_TYPE_NO_OP":         1,
	"ENTRY_TYPE_DATA":          2,
	"ENTRY_TYPE_CONFIGURATION": 3,
}

func (x EntryType) Enum() *EntryType {
	p := new(EntryType)
	*p = x
	return p
}

func (x EntryType) String() string {
	return proto.EnumName(EntryType_name, int32(x))
}

func (x *EntryType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EntryType_value, data, "EntryType")
	if err != nil {
		return err
	}
	*x = EntryType(value)
	return nil
}

func (EntryType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f03a87d3f9da8968, []int{0}
}

func init() {
	proto.RegisterEnum("rpc.EntryType", EntryType_name, EntryType_value)
}

func init() {
	proto.RegisterFile("rpc/enum.proto", fileDescriptor_f03a87d3f9da8968)
}

var fileDescriptor_f03a87d3f9da8968 = []byte{
	// 128 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2b, 0x2a, 0x48, 0xd6,
	0x4f, 0xcd, 0x2b, 0xcd, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2e, 0x2a, 0x48, 0xd6,
	0xca, 0xe1, 0xe2, 0x74, 0xcd, 0x2b, 0x29, 0xaa, 0x0c, 0xa9, 0x2c, 0x48, 0x15, 0x12, 0xe3, 0x12,
	0x72, 0xf5, 0x0b, 0x09, 0x8a, 0x8c, 0x0f, 0x89, 0x0c, 0x70, 0x8d, 0x0f, 0xf5, 0xf3, 0xf6, 0xf3,
	0x0f, 0xf7, 0x13, 0x60, 0x10, 0x12, 0xe1, 0x12, 0x40, 0x12, 0xf7, 0xf3, 0x8f, 0xf7, 0x0f, 0x10,
	0x60, 0x14, 0x12, 0xe6, 0xe2, 0x47, 0x12, 0x75, 0x71, 0x0c, 0x71, 0x14, 0x60, 0x12, 0x92, 0xe1,
	0x92, 0x40, 0x12, 0x74, 0xf6, 0xf7, 0x73, 0xf3, 0x74, 0x0f, 0x0d, 0x72, 0x0c, 0xf1, 0xf4, 0xf7,
	0x13, 0x60, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0xa0, 0x3b, 0x2e, 0x02, 0x83, 0x00, 0x00, 0x00,
}
