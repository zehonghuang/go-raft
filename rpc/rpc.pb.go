// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc/rpc.proto

package rpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EntryMeta struct {
	Term                 *int64     `protobuf:"varint,1,req,name=term" json:"term,omitempty"`
	Type                 *EntryType `protobuf:"varint,2,req,name=type,enum=rpc.EntryType" json:"type,omitempty"`
	Peers                []string   `protobuf:"bytes,3,rep,name=peers" json:"peers,omitempty"`
	DataLen              *int64     `protobuf:"varint,4,opt,name=data_len,json=dataLen" json:"data_len,omitempty"`
	OldPeers             []string   `protobuf:"bytes,5,rep,name=old_peers,json=oldPeers" json:"old_peers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *EntryMeta) Reset()         { *m = EntryMeta{} }
func (m *EntryMeta) String() string { return proto.CompactTextString(m) }
func (*EntryMeta) ProtoMessage()    {}
func (*EntryMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9874a201429861e, []int{0}
}

func (m *EntryMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntryMeta.Unmarshal(m, b)
}
func (m *EntryMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntryMeta.Marshal(b, m, deterministic)
}
func (m *EntryMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntryMeta.Merge(m, src)
}
func (m *EntryMeta) XXX_Size() int {
	return xxx_messageInfo_EntryMeta.Size(m)
}
func (m *EntryMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_EntryMeta.DiscardUnknown(m)
}

var xxx_messageInfo_EntryMeta proto.InternalMessageInfo

func (m *EntryMeta) GetTerm() int64 {
	if m != nil && m.Term != nil {
		return *m.Term
	}
	return 0
}

func (m *EntryMeta) GetType() EntryType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return EntryType_ENTRY_TYPE_UNKNOWN
}

func (m *EntryMeta) GetPeers() []string {
	if m != nil {
		return m.Peers
	}
	return nil
}

func (m *EntryMeta) GetDataLen() int64 {
	if m != nil && m.DataLen != nil {
		return *m.DataLen
	}
	return 0
}

func (m *EntryMeta) GetOldPeers() []string {
	if m != nil {
		return m.OldPeers
	}
	return nil
}

type RequestVoteRequest struct {
	GroupId              *string  `protobuf:"bytes,1,req,name=group_id,json=groupId" json:"group_id,omitempty"`
	ServerId             *string  `protobuf:"bytes,2,req,name=server_id,json=serverId" json:"server_id,omitempty"`
	PeerId               *string  `protobuf:"bytes,3,req,name=peer_id,json=peerId" json:"peer_id,omitempty"`
	Term                 *int64   `protobuf:"varint,4,req,name=term" json:"term,omitempty"`
	PrevLogTerm          *int64   `protobuf:"varint,5,req,name=prev_log_term,json=prevLogTerm" json:"prev_log_term,omitempty"`
	PrevLogIndex         *int64   `protobuf:"varint,6,req,name=prev_log_index,json=prevLogIndex" json:"prev_log_index,omitempty"`
	PreVote              *bool    `protobuf:"varint,7,req,name=pre_vote,json=preVote" json:"pre_vote,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestVoteRequest) Reset()         { *m = RequestVoteRequest{} }
func (m *RequestVoteRequest) String() string { return proto.CompactTextString(m) }
func (*RequestVoteRequest) ProtoMessage()    {}
func (*RequestVoteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9874a201429861e, []int{1}
}

func (m *RequestVoteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestVoteRequest.Unmarshal(m, b)
}
func (m *RequestVoteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestVoteRequest.Marshal(b, m, deterministic)
}
func (m *RequestVoteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestVoteRequest.Merge(m, src)
}
func (m *RequestVoteRequest) XXX_Size() int {
	return xxx_messageInfo_RequestVoteRequest.Size(m)
}
func (m *RequestVoteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestVoteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RequestVoteRequest proto.InternalMessageInfo

func (m *RequestVoteRequest) GetGroupId() string {
	if m != nil && m.GroupId != nil {
		return *m.GroupId
	}
	return ""
}

func (m *RequestVoteRequest) GetServerId() string {
	if m != nil && m.ServerId != nil {
		return *m.ServerId
	}
	return ""
}

func (m *RequestVoteRequest) GetPeerId() string {
	if m != nil && m.PeerId != nil {
		return *m.PeerId
	}
	return ""
}

func (m *RequestVoteRequest) GetTerm() int64 {
	if m != nil && m.Term != nil {
		return *m.Term
	}
	return 0
}

func (m *RequestVoteRequest) GetPrevLogTerm() int64 {
	if m != nil && m.PrevLogTerm != nil {
		return *m.PrevLogTerm
	}
	return 0
}

func (m *RequestVoteRequest) GetPrevLogIndex() int64 {
	if m != nil && m.PrevLogIndex != nil {
		return *m.PrevLogIndex
	}
	return 0
}

func (m *RequestVoteRequest) GetPreVote() bool {
	if m != nil && m.PreVote != nil {
		return *m.PreVote
	}
	return false
}

type RequestVoteResponse struct {
	Term                 *int64   `protobuf:"varint,1,req,name=term" json:"term,omitempty"`
	Granted              *bool    `protobuf:"varint,2,req,name=granted" json:"granted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestVoteResponse) Reset()         { *m = RequestVoteResponse{} }
func (m *RequestVoteResponse) String() string { return proto.CompactTextString(m) }
func (*RequestVoteResponse) ProtoMessage()    {}
func (*RequestVoteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d9874a201429861e, []int{2}
}

func (m *RequestVoteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestVoteResponse.Unmarshal(m, b)
}
func (m *RequestVoteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestVoteResponse.Marshal(b, m, deterministic)
}
func (m *RequestVoteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestVoteResponse.Merge(m, src)
}
func (m *RequestVoteResponse) XXX_Size() int {
	return xxx_messageInfo_RequestVoteResponse.Size(m)
}
func (m *RequestVoteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestVoteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RequestVoteResponse proto.InternalMessageInfo

func (m *RequestVoteResponse) GetTerm() int64 {
	if m != nil && m.Term != nil {
		return *m.Term
	}
	return 0
}

func (m *RequestVoteResponse) GetGranted() bool {
	if m != nil && m.Granted != nil {
		return *m.Granted
	}
	return false
}

func init() {
	proto.RegisterType((*EntryMeta)(nil), "rpc.EntryMeta")
	proto.RegisterType((*RequestVoteRequest)(nil), "rpc.RequestVoteRequest")
	proto.RegisterType((*RequestVoteResponse)(nil), "rpc.RequestVoteResponse")
}

func init() {
	proto.RegisterFile("rpc/rpc.proto", fileDescriptor_d9874a201429861e)
}

var fileDescriptor_d9874a201429861e = []byte{
	// 359 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x51, 0xbd, 0x6a, 0xeb, 0x30,
	0x14, 0xc6, 0x3f, 0x89, 0x6d, 0xe5, 0xc6, 0x83, 0xee, 0x85, 0xe8, 0xe6, 0x2e, 0xc6, 0xdc, 0xc1,
	0x53, 0x0a, 0x99, 0x3b, 0x14, 0x4a, 0x07, 0x43, 0x0a, 0x45, 0x0d, 0x5d, 0x8d, 0xb1, 0x4e, 0x4d,
	0xc0, 0xb1, 0xd4, 0x63, 0xc5, 0x34, 0x0f, 0xd1, 0xa1, 0x2f, 0xd8, 0x67, 0x29, 0x92, 0x93, 0x94,
	0x90, 0x4e, 0xdd, 0xf4, 0xfd, 0x9c, 0x4f, 0xfa, 0x8e, 0xc8, 0x14, 0x55, 0x75, 0x85, 0xaa, 0x5a,
	0x28, 0x94, 0x5a, 0x52, 0x0f, 0x55, 0x35, 0x8f, 0x0d, 0x07, 0xed, 0x6e, 0x3b, 0x90, 0xe9, 0xbb,
	0x43, 0xa2, 0xbb, 0x56, 0xe3, 0xfe, 0x1e, 0x74, 0x49, 0x29, 0xf1, 0x35, 0xe0, 0x96, 0x39, 0x89,
	0x9b, 0x79, 0xdc, 0x9e, 0x69, 0x4a, 0x7c, 0xbd, 0x57, 0xc0, 0xdc, 0xc4, 0xcd, 0xe2, 0x65, 0xbc,
	0x30, 0x81, 0x76, 0x62, 0xbd, 0x57, 0xc0, 0xad, 0x46, 0xff, 0x90, 0x91, 0x02, 0xc0, 0x8e, 0x79,
	0x89, 0x97, 0x45, 0x7c, 0x00, 0xf4, 0x2f, 0x09, 0x45, 0xa9, 0xcb, 0xa2, 0x81, 0x96, 0xf9, 0x89,
	0x93, 0x79, 0x3c, 0x30, 0x78, 0x05, 0x2d, 0xfd, 0x47, 0x22, 0xd9, 0x88, 0x62, 0x18, 0x1a, 0xd9,
	0xa1, 0x50, 0x36, 0xe2, 0xc1, 0xe0, 0xf4, 0xc3, 0x21, 0x94, 0xc3, 0xcb, 0x0e, 0x3a, 0xfd, 0x24,
	0x35, 0x1c, 0x8e, 0x26, 0xae, 0x46, 0xb9, 0x53, 0xc5, 0x46, 0xd8, 0x07, 0x46, 0x3c, 0xb0, 0x38,
	0x17, 0x26, 0xae, 0x03, 0xec, 0x01, 0x8d, 0xe6, 0x5a, 0x2d, 0x1c, 0x88, 0x5c, 0xd0, 0x19, 0x09,
	0xcc, 0x3d, 0x46, 0xf2, 0xac, 0x34, 0x36, 0x30, 0x17, 0xa7, 0xb6, 0xfe, 0x59, 0xdb, 0xa9, 0x42,
	0xe8, 0x8b, 0x46, 0xd6, 0x85, 0x15, 0x47, 0x56, 0x9c, 0x18, 0x72, 0x25, 0xeb, 0xb5, 0xf1, 0xfc,
	0x27, 0xf1, 0xc9, 0xb3, 0x69, 0x05, 0xbc, 0xb2, 0xb1, 0x35, 0xfd, 0x3a, 0x98, 0x72, 0xc3, 0x99,
	0xe7, 0x2a, 0x84, 0xa2, 0x97, 0x1a, 0x58, 0x90, 0xb8, 0x59, 0xc8, 0x03, 0x85, 0x60, 0x0a, 0xa5,
	0xb7, 0xe4, 0xf7, 0x59, 0xbf, 0x4e, 0xc9, 0xb6, 0x83, 0x6f, 0xb7, 0xcf, 0x48, 0x50, 0x63, 0xd9,
	0x6a, 0x18, 0x7a, 0x85, 0xfc, 0x08, 0x97, 0x6f, 0x0e, 0x99, 0xf0, 0xf2, 0x59, 0x3f, 0x02, 0xf6,
	0x9b, 0x0a, 0xe8, 0x35, 0x39, 0xe6, 0xd3, 0x99, 0xfd, 0xa4, 0xcb, 0x15, 0xce, 0xd9, 0xa5, 0x70,
	0xb8, 0xfb, 0x86, 0x4c, 0xf0, 0x8b, 0xfe, 0x41, 0xc2, 0x67, 0x00, 0x00, 0x00, 0xff, 0xff, 0x9f,
	0x97, 0x56, 0x44, 0x6e, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RaftServiceClient is the client API for RaftService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RaftServiceClient interface {
	PreVote(ctx context.Context, in *RequestVoteRequest, opts ...grpc.CallOption) (*RequestVoteResponse, error)
	RequestVote(ctx context.Context, in *RequestVoteRequest, opts ...grpc.CallOption) (*RequestVoteResponse, error)
}

type raftServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRaftServiceClient(cc grpc.ClientConnInterface) RaftServiceClient {
	return &raftServiceClient{cc}
}

func (c *raftServiceClient) PreVote(ctx context.Context, in *RequestVoteRequest, opts ...grpc.CallOption) (*RequestVoteResponse, error) {
	out := new(RequestVoteResponse)
	err := c.cc.Invoke(ctx, "/rpc.RaftService/preVote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *raftServiceClient) RequestVote(ctx context.Context, in *RequestVoteRequest, opts ...grpc.CallOption) (*RequestVoteResponse, error) {
	out := new(RequestVoteResponse)
	err := c.cc.Invoke(ctx, "/rpc.RaftService/requestVote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RaftServiceServer is the server API for RaftService service.
type RaftServiceServer interface {
	PreVote(context.Context, *RequestVoteRequest) (*RequestVoteResponse, error)
	RequestVote(context.Context, *RequestVoteRequest) (*RequestVoteResponse, error)
}

// UnimplementedRaftServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRaftServiceServer struct {
}

func (*UnimplementedRaftServiceServer) PreVote(ctx context.Context, req *RequestVoteRequest) (*RequestVoteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PreVote not implemented")
}
func (*UnimplementedRaftServiceServer) RequestVote(ctx context.Context, req *RequestVoteRequest) (*RequestVoteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestVote not implemented")
}

func RegisterRaftServiceServer(s *grpc.Server, srv RaftServiceServer) {
	s.RegisterService(&_RaftService_serviceDesc, srv)
}

func _RaftService_PreVote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestVoteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaftServiceServer).PreVote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.RaftService/PreVote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaftServiceServer).PreVote(ctx, req.(*RequestVoteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RaftService_RequestVote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestVoteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaftServiceServer).RequestVote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.RaftService/RequestVote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaftServiceServer).RequestVote(ctx, req.(*RequestVoteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RaftService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.RaftService",
	HandlerType: (*RaftServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "preVote",
			Handler:    _RaftService_PreVote_Handler,
		},
		{
			MethodName: "requestVote",
			Handler:    _RaftService_RequestVote_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpc/rpc.proto",
}
